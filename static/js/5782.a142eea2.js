"use strict";(self["webpackChunkonepic"]=self["webpackChunkonepic"]||[]).push([[5782],{14824:function(e,t,r){r.r(t),r.d(t,{getGeometryServiceURL:function(){return w},projectGeometry:function(){return v}});var o=r(21383),n=r(22130),i=r(53262),s=r(94848),a=r(94315),c=r(90421),l=r(16829),u=r(26173),f=r(61445),p=r(60931),m=r(58006),g=(r(15055),r(77623));let y=class extends p.wq{constructor(e){super(e),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const e=this.geometries.map((e=>e.toJSON())),t=this.geometries[0],r={};return r.outSR=this.outSpatialReference.wkid||JSON.stringify(this.outSpatialReference.toJSON()),r.inSR=t.spatialReference.wkid||JSON.stringify(t.spatialReference.toJSON()),r.geometries=JSON.stringify({geometryType:(0,c.Ji)(t),geometries:e}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),null!=this.transformForward&&(r.transformForward=this.transformForward),r}};(0,f._)([(0,m.Cb)()],y.prototype,"geometries",void 0),(0,f._)([(0,m.Cb)({json:{read:{source:"outSR"}}})],y.prototype,"outSpatialReference",void 0),(0,f._)([(0,m.Cb)()],y.prototype,"transformation",void 0),(0,f._)([(0,m.Cb)()],y.prototype,"transformForward",void 0),y=(0,f._)([(0,g.j)("esri.rest.support.ProjectParameters")],y);const h=y,S=(0,a.se)(h);async function d(e,t,r){t=S(t);const o=(0,l.en)(e),n={...o.query,f:"json",...t.toJSON()},i=t.outSpatialReference,a=(0,c.Ji)(t.geometries[0]),f=(0,l.lA)(n,r);return(0,s["default"])(o.path+"/project",f).then((({data:{geometries:e}})=>(0,u.o)(e,a,i)))}async function w(e=null,t){if(o.Z.geometryServiceUrl)return o.Z.geometryServiceUrl;if(!e)throw new n.Z("internal:geometry-service-url-not-configured");let r;r="portal"in e?e.portal||i.Z.getDefault():e,await r.load({signal:t});const s=r.helperServices?.geometry?.url;if(!s)throw new n.Z("internal:geometry-service-url-not-configured");return s}async function v(e,t,r=null,o){const i=await w(r,o),s=new h;s.geometries=[e],s.outSpatialReference=t;const a=await d(i,s,{signal:o});if(a&&Array.isArray(a)&&1===a.length)return a[0];throw new n.Z("internal:geometry-service-projection-failed")}}}]);